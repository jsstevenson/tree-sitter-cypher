==================
Basic match
==================
MATCH (n)
RETURN n
---
(cypher
  (query
    (match
      (pattern
        (pattern_element
          (node_pattern
            (variable
              (identifier))))))
  (return
    (projection_body
      (projection_items
        (projection_item
          (expression
            (property_or_labels_expression
              (atom
                (variable
                  (identifier)))))))))))
==================
Basic node relationship pattern and node property namespace
==================
MATCH (user)-[:FRIEND]->(friend)
RETURN user.name, friend.name
---
(cypher
  (query
    (match
      (pattern
        (pattern_element
          (node_pattern
            (variable
              (identifier)))
          (pattern_element_chain
            (relationship_detail
              (relationship_types
                (rel_type_name
                  (schema_name
                    (identifier)))))
            (node_pattern
              (variable
                (identifier)))))))
  (return
    (projection_body
      (projection_items
        (projection_item
          (expression
            (property_or_labels_expression
              (atom
                (variable
                  (identifier)))
              (property_lookup
                (property_key_name
                  (schema_name
                    (identifier)))))))
        (projection_item
          (expression
            (property_or_labels_expression
              (atom
                (variable
                  (identifier)))
              (property_lookup
                (property_key_name
                  (schema_name
                    (identifier))))))))))))
==================
Create statement and node match properties
==================
CREATE (john:Person {name: 'John'})
CREATE (sara:Person {name: 'Sara'})
CREATE (maria:Person {name: 'Maria'})
CREATE (john)-[:FRIEND]->(sara)-[:FRIEND]->(maria)
---
(cypher
  (query
    (create
      (pattern
        (pattern_element
          (node_pattern
            (variable
              (identifier))
            (node_labels
              (node_label
                (label_name
                  (schema_name
                    (identifier)))))
            (properties
              (map_literal
                (property_key_name
                  (schema_name
                    (identifier)))
                (expression
                  (property_or_labels_expression
                    (atom
                      (literal
                        (string_literal)))))))))))
    (create
      (pattern
        (pattern_element
          (node_pattern
            (variable
              (identifier))
            (node_labels
              (node_label
                (label_name
                  (schema_name
                    (identifier)))))
            (properties
              (map_literal
                (property_key_name
                  (schema_name
                    (identifier)))
                (expression
                  (property_or_labels_expression
                    (atom
                      (literal
                        (string_literal)))))))))))
    (create
      (pattern
        (pattern_element
          (node_pattern
            (variable
              (identifier))
            (node_labels
              (node_label
                (label_name
                  (schema_name
                    (identifier)))))
            (properties
              (map_literal
                (property_key_name
                  (schema_name
                    (identifier)))
                (expression
                  (property_or_labels_expression
                    (atom
                      (literal
                        (string_literal)))))))))))
    (create
      (pattern
        (pattern_element
          (node_pattern
            (variable
              (identifier)))
          (pattern_element_chain
            (relationship_detail
              (relationship_types
                (rel_type_name
                  (schema_name
                    (identifier)))))
            (node_pattern
              (variable
                (identifier))))
          (pattern_element_chain
            (relationship_detail
              (relationship_types
                (rel_type_name
                  (schema_name
                    (identifier)))))
            (node_pattern
              (variable
                (identifier)))))))))
